


//


#ifndef _YLH_ACCEPTOR_HANDLER_H
#define _YLH_ACCEPTOR_HANDLER_H

#include "ace/Global_Macros.h"
#include "ace/Svc_Handler.h"
#include "ace/SOCK_Stream.h"

class YLH_Acceptor;

class YLH_Acceptor_Handler : public ACE_Svc_Handler<ACE_SOCK_STREAM, ACE_MT_SYNCH>
{
    typedef ACE_Svc_Handler<ACE_SOCK_STREAM, ACE_MT_SYNCH> super;

public:
    YLH_Acceptor_Handler();
    YLH_Acceptor_Handler(YLH_Acceptor* acceptor);
    
    virtual int open (void * = 0);

    virtual int handle_input(ACE_HANDLE fd /* = ACE_INVALID_HANDLE */);

    virtual int handle_output(ACE_HANDLE fd /* = ACE_INVALID_HANDLE */);

    virtual int handle_close (ACE_HANDLE = ACE_INVALID_HANDLE, ACE_Reactor_Mask = ACE_Event_Handler::ALL_EVENTS_MASK);
    
    virtual int handle_timeout (const ACE_Time_Value &time, const void *);

//private:
//    YLH_Acceptor*           m_Owner_Acceptor;

private:
    //YLH_Acceptor_Handler();
};



#endif  //_YLH_ACCEPTOR_HANDLER_H